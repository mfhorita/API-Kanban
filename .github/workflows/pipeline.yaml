name: Pipeline
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

#    env:
#      DATABASE_URL: ${{ secrets.DATABASE_URL }}
#      SECRET_KEY: ${{ secrets.SECRET_KEY }}
#      ALGORITHM: ${{ secrets.ALGORITHM }}
#      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    steps:
      - name: Copia os arquivos do repositório
        uses: actions/checkout@v4

      - name: Configurar variáveis de ambiente
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "ALGORITHM=${{ secrets.ALGORITHM }}" >> $GITHUB_ENV
          echo "ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}" >> $GITHUB_ENV

      - name: Instalar o python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Instalar o poetry
        run: pipx install poetry

      - name: Instalar dependências
        run: poetry install

      - name: Instalar email_validator
        run: poetry add email_validator

      - name: Instalar pydantic
        run: poetry add "pydantic[email]"

      - name: instalar python-multipart
        run: poetry add "python-multipart"

      - name: Debug Environment Variables
        run: env | grep DATABASE_URL

      - name: Executar testes
        run: poetry run task test

      - name: Executar aplicação
        run: uvicorn app.main:app --host 0.0.0.0 --port 8000
